name: Deploy CloudFormation Stacks

on:
  workflow_dispatch:
    inputs:
      region:
        description: "AWS Region"
        required: true
        default: "ap-southeast-2"
      scriptsBucket:
        description: "S3 bucket name where scripts will be uploaded"
        required: true
        default: data14group1-scripts
      rawBucket:
        description: "S3 bucket name where raw data is stored"
        required: true
        default: data14group1-raw
      stagingBucket:
        description: "S3 bucket name where staging data is stored"
        required: true
        default: data14group1-staging
      transformedBucket:
        description: "S3 bucket name where transformed data is stored"
        required: true
        default: data14group1-transformed
      mlBucket:
        description: "S3 bucket name where ml data is stored"
        required: true
        default: data14group1-ml
      kmsKeyArnForCsv2Parquet:
        description: "KMS Key ARN for encrypting data in GlueJobCsv2Parquet"
        required: true
        default: "arn:aws:kms:ap-southeast-2:339713004220:key/fe40ec14-2c15-437a-b2ca-76c12be24c6e"
      kmsKeyArnForETL:
        description: "KMS Key ARN for encrypting data in GlueJobETL"
        required: true
        default: "arn:aws:kms:ap-southeast-2:339713004220:key/a922aa60-b15b-44eb-bd2a-a47b47f11293"

jobs:
  cfn-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
#        with:
#          fetch-depth: 2 # Fetch the last two commits, used to comparing diff

      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region }}

      - name: Run upload script
        run: sh scripts/shell/upload_to_s3.sh ${{ github.event.inputs.scriptsBucket }}


      - name: Deploy CloudFormation Stack
        id: deploy-stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1.0.3
        with:
          name: deploy-stack
          template: cloudformation/root.yml
          parameter-overrides: |
            scriptsBucket=${{ github.event.inputs.scriptsBucket }},
            rawBucket=${{ github.event.inputs.rawBucket }},
            stagingBucket=${{ github.event.inputs.stagingBucket }},
            transformedBucket=${{ github.event.inputs.transformedBucket }},
            mlBucket=${{ github.event.inputs.mlBucket }},
            lambdaRaw2stagingVersion=${{ env.LAMBDA_RAW2STAGING_VERSION }},
<<<<<<< HEAD
            rootEmail=${{  secrets.ROOT_EMAIL  }}
=======
            kmsKeyArnForCsv2Parquet=${{ github.event.inputs.kmsKeyArnForCsv2Parquet }},
            kmsKeyArnForETL=${{ github.event.inputs.kmsKeyArnForETL }}
>>>>>>> origin/main
          capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
          no-fail-on-empty-changeset: "1"
